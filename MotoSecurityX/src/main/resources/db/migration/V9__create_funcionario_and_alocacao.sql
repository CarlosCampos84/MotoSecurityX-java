-- V9__create_funcionario_and_alocacao.sql
-- NÃO recrie FUNCIONARIO (já existe na V1). Só evolua e crie ALOCACAO.

-----------------------------------------
-- 1) Evolução segura da tabela FUNCIONARIO
-----------------------------------------
ALTER TABLE funcionario
    ADD COLUMN IF NOT EXISTS email VARCHAR(120);

ALTER TABLE funcionario
    ADD COLUMN IF NOT EXISTS ativo BOOLEAN DEFAULT TRUE;

-- Valores default
UPDATE funcionario SET ativo = TRUE WHERE ativo IS NULL;

-- Preenche email vazio (apenas se for tornar NOT NULL/UNIQUE agora)
UPDATE funcionario
SET email = COALESCE(email, CONCAT('user', id, '@local'))
WHERE email IS NULL;

-- Constraint por índice único (forma idempotente)
CREATE UNIQUE INDEX IF NOT EXISTS uk_func_email ON funcionario(email);

-----------------------------------------
-- 2) Nova tabela ALOCACAO
-----------------------------------------
CREATE TABLE IF NOT EXISTS alocacao (
                                        id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        moto_id         BIGINT NOT NULL,
                                        funcionario_id  BIGINT NOT NULL,
                                        data_inicio     TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                        data_fim        TIMESTAMP NULL,
                                        CONSTRAINT fk_aloc_moto FOREIGN KEY (moto_id) REFERENCES moto(id),
    CONSTRAINT fk_aloc_func FOREIGN KEY (funcionario_id) REFERENCES funcionario(id)
    );

-- Índices úteis
CREATE INDEX IF NOT EXISTS idx_alocacao_moto ON alocacao(moto_id, data_fim);
CREATE INDEX IF NOT EXISTS idx_alocacao_func ON alocacao(funcionario_id, data_fim);

-- (Opcional) seeds, só se fizer sentido com seu modelo atual
-- INSERT INTO funcionario (nome, email, ativo) VALUES
--   ('João Lima','joao.lima@mottu.com', TRUE),
--   ('Maria Souza','maria.souza@mottu.com', TRUE);
